name: Securin SL Scanning
on: [workflow_dispatch]
jobs:
  job_auth_token:
    runs-on: ubuntu-latest 
    outputs:
      auth_token: ${{ steps.get-token.outputs.auth_token }}
    steps:
     - id: get-token
       run: |
         token= $( curl --location --request POST 'http://da63307fd7e5.ngrok.io/api/get_token' \
                --header 'Content-Type: application/json' \
                --data-raw '{
                    "userId": "vishal.kumar@cybersecurityworks.com",
                     "password": "Vishal123#"
                }' | jq '.access_token' )     
          echo "::set-output auth_token=$token"
  job-b:
    runs-on: ubuntu-latest
    needs: job_auth_token
    steps:
      - run: echo vishal ${{ needs.job_auth_token.outputs.auth_token }}        
                       
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Anchore Engine
      run: docker build . --file Dockerfile --tag localbuild/testimage:latest
    - uses: anchore/scan-action@v2
      id: scan
      with:
        image: "localbuild/testimage:latest"
            
   # - name: grype scan JSON results
  #  run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}      
    - name: Bridgecrew
      uses: bridgecrewio/checkov-action@master
      with:
          directory: ${{github.workspace}}/
          quiet: true # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: json # optional: the output format, one of: cli, json, junitxml, github_failed_only
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          log_level: DEBUG # optional: set log level. Default WARNING
    - name: Findsecbugs
      run : |
       
       docker images
       docker pull vishalceg/findsecbugs
       echo  ${{github.workspace}}
       docker run -v ${{github.workspace}}:/workdir/scan vishalceg/findsecbugs 
       cat ${{github.workspace}}/secbugs-output.xml
    - name: OWASP Dependency Checker
      run : |
       
       docker images
       docker pull securetest1/owasp
       echo  ${{github.workspace}}
       docker run -v ${{github.workspace}}:/src  --volume ${{github.workspace}}:/reports  securetest1/owasp --project "ECOM-SERVICE" --disableAssembly --disableNodeJS --disableRetireJS 
       ls ${{github.workspace}}
       cat ${{github.workspace}}/dependency-check-report.json
