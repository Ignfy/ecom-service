---
name: Shiftleft Scan
"on":
- workflow_dispatch
jobs:
  scanning:
    env:
      FINDSECBUG_IMAGE_TAG: 442752979892.dkr.ecr.us-east-2.amazonaws.com/findsecbugs:latest
    steps:
    - name: Retrieve Token
      run: |
        token=$( curl --request POST 'http://824d-103-70-41-18.ngrok.io/api/get_token'  --header 'Content-Type: application/json'  --data-raw  '{"userId": "${{ secrets.USER_NAME }}", "password": "${{ secrets.PASSWORD }}" }' | jq -r '.access_token' )
        echo "AUTH_TOKEN=$token" >> $GITHUB_ENV
    - run: |
        respJson=$(curl --location --request GET 'http://56c4-103-70-41-18.ngrok.io/auth-token'  --header 'Authorization: Bearer ${{ env.AUTH_TOKEN }}'  --data-raw ' ' )
        echo "AUTH_USER=$(jq -r '.user' <<< "$respJson")" >> $GITHUB_ENV
        echo "AUTH_PASSWORD=$(jq -r '.password' <<< "$respJson")" >> $GITHUB_ENV
        echo "AUTH_PROXYURL=$(jq -r '.proxyUrl' <<< "$respJson")" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Set up java 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 11
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify
    - name: Findsecbugs Scan
      run: |
        docker login --username  ${{ env.AUTH_USER }} --password ${{ env.AUTH_PASSWORD }} ${{ env.AUTH_PROXYURL }}
        docker pull ${{env.FINDSECBUG_IMAGE_TAG}}
        echo  ${{github.workspace}}
        docker run -v ${{github.workspace}}:/workdir/scan ${{env.FINDSECBUG_IMAGE_TAG}}
        echo $(cat ${{github.workspace}}/secbugs-output.xml) > secbugs.xml
    - uses: actions/upload-artifact@v2
      with:
        name: shiftleft
        path: secbugs.xml
    runs-on: ubuntu-latest
  result_processing:
    needs: scanning
    steps:
    - name: Result parsing
      run: |
        token=$( curl --request POST 'http://824d-103-70-41-18.ngrok.io/api/get_token'  --header 'Content-Type: application/json'  --data-raw  '{"userId": "${{ secrets.USER_NAME }}", "password": "${{ secrets.PASSWORD }}" }' | jq -r '.access_token' )
        echo "AUTH_TOKEN=$token" >> $GITHUB_ENV
    - name: Download Scan Result
      uses: actions/download-artifact@v2
      with:
        name: shiftleft
    - run: |
        result=$(curl --location --request POST 'http://56c4-103-70-41-18.ngrok.io/github/notify'  --header 'Authorization: Bearer ${{ env.AUTH_TOKEN }}'  --form 'file=@"secbugs.xml"' --form 'repo="${{ github.repository }}"')
        echo $(jq -r '.serifdata' <<< "$result") > result.sarif
        echo $(jq -r '.consoleResult' <<< "$result") > consoleResult.txt
        echo "BUILD_STATUS=$(jq -r '.buildStatus' <<< "$result")" >> $GITHUB_ENV
        echo "SARIF_GEN=$(jq -r '.generateSarif' <<< "$result")" >> $GITHUB_ENV
        
    - uses: actions/upload-artifact@v2
      with:
        name: shiftleft
        path: consoleResult.txt
    - name: Upload result to GitHub Code Scanning
      if: ${{ env.SARIF_GEN == 'true' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: result.sarif
    - name: Print result on console
      run: |
          value='cat consoleResult.txt'
          echo The result is $value 
    - name: Fail the build
      if: ${{ env.BUILD_STATUS == 'false' }}
      run: |
        echo "Found issues"
        exit 1
    runs-on: ubuntu-latest
