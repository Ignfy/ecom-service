version: 0.2

name: Securin Scan
env:
  variables:
    APP_ID: a040441301daa0781830f3f1a020a98132503cfa5a8ae1095483485eb6f89daf

phases:
  pre_build:
    commands:
      - token=$( curl --request POST 'http://595a-103-70-41-30.ngrok.io/api/get_token'  --header 'Content-Type: application/json'  --data-raw  '{"userId": "${{ secrets.USER_NAME }}", "password": "${{ secrets.PASSWORD }}" }' | jq -r '.access_token' )
      - echo "::set-output name=token::$token"
      - echo Retrieve Scan Info
      - respJson=$(curl --location --request GET 'http://9b90-103-70-41-30.ngrok.io/scan-info?app_id=${{ env.APP_ID }}'  --header 'Authorization: Bearer ${{steps.access_token.outputs.token}}'  --data-raw ' ' )
      - echo "::set-output name=authTokenJson::$respJson"
  build:
    commands: 
      - Build with Maven
      - mvn --batch-mode --update-snapshots verify
      - echo Scan Initiated
      - docker login --username  ${{fromJson(steps.auth_token.outputs.authTokenJson).user}} --password ${{fromJson(steps.auth_token.outputs.authTokenJson).password}} ${{fromJson(steps.auth_token.outputs.authTokenJson).proxyUrl}}
      - docker pull ${{fromJson(steps.auth_token.outputs.authTokenJson).imageTag}}
      - docker run -v ${{github.workspace}}:/src  --volume ${{github.workspace}}:/workdir  ${{fromJson(steps.auth_token.outputs.authTokenJson).imageTag}} -user ${{ secrets.USER_NAME }} -pass ${{ secrets.PASSWORD }} -app_id ${{ env.APP_ID }} event:${{ github.event_name }}  pr_number:${{ github.event.number }}
    finally:
      - elcho The scan is completed 
